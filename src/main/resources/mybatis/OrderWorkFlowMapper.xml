<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alipapa.smp.order.mapper.OrderWorkFlowMapper">
  <resultMap id="BaseResultMap" type="com.alipapa.smp.order.pojo.OrderWorkFlow">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="old_order_status" jdbcType="INTEGER" property="oldOrderStatus" />
    <result column="new_order_status" jdbcType="INTEGER" property="newOrderStatus" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="op_user_no" jdbcType="VARCHAR" property="opUserNo" />
    <result column="op_user_name" jdbcType="VARCHAR" property="opUserName" />
    <result column="op_user_role" jdbcType="VARCHAR" property="opUserRole" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, old_order_status, new_order_status, type, result, op_user_no, op_user_name, 
    op_user_role, remark, created_time, updated_time
  </sql>
  <select id="selectByExample" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_work_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_work_flow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_work_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlowExample">
    delete from order_work_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlow">
    insert into order_work_flow (id, order_no, old_order_status, 
      new_order_status, type, result, 
      op_user_no, op_user_name, op_user_role, 
      remark, created_time, updated_time
      )
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{oldOrderStatus,jdbcType=INTEGER}, 
      #{newOrderStatus,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{opUserNo,jdbcType=VARCHAR}, #{opUserName,jdbcType=VARCHAR}, #{opUserRole,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlow">
    insert into order_work_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="oldOrderStatus != null">
        old_order_status,
      </if>
      <if test="newOrderStatus != null">
        new_order_status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="opUserNo != null">
        op_user_no,
      </if>
      <if test="opUserName != null">
        op_user_name,
      </if>
      <if test="opUserRole != null">
        op_user_role,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="oldOrderStatus != null">
        #{oldOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="newOrderStatus != null">
        #{newOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="opUserNo != null">
        #{opUserNo,jdbcType=VARCHAR},
      </if>
      <if test="opUserName != null">
        #{opUserName,jdbcType=VARCHAR},
      </if>
      <if test="opUserRole != null">
        #{opUserRole,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlowExample" resultType="java.lang.Long">
    select count(*) from order_work_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_work_flow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.oldOrderStatus != null">
        old_order_status = #{record.oldOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.newOrderStatus != null">
        new_order_status = #{record.newOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.opUserNo != null">
        op_user_no = #{record.opUserNo,jdbcType=VARCHAR},
      </if>
      <if test="record.opUserName != null">
        op_user_name = #{record.opUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.opUserRole != null">
        op_user_role = #{record.opUserRole,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_work_flow
    set id = #{record.id,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      old_order_status = #{record.oldOrderStatus,jdbcType=INTEGER},
      new_order_status = #{record.newOrderStatus,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      op_user_no = #{record.opUserNo,jdbcType=VARCHAR},
      op_user_name = #{record.opUserName,jdbcType=VARCHAR},
      op_user_role = #{record.opUserRole,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlow">
    update order_work_flow
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="oldOrderStatus != null">
        old_order_status = #{oldOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="newOrderStatus != null">
        new_order_status = #{newOrderStatus,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="opUserNo != null">
        op_user_no = #{opUserNo,jdbcType=VARCHAR},
      </if>
      <if test="opUserName != null">
        op_user_name = #{opUserName,jdbcType=VARCHAR},
      </if>
      <if test="opUserRole != null">
        op_user_role = #{opUserRole,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alipapa.smp.order.pojo.OrderWorkFlow">
    update order_work_flow
    set order_no = #{orderNo,jdbcType=VARCHAR},
      old_order_status = #{oldOrderStatus,jdbcType=INTEGER},
      new_order_status = #{newOrderStatus,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      op_user_no = #{opUserNo,jdbcType=VARCHAR},
      op_user_name = #{opUserName,jdbcType=VARCHAR},
      op_user_role = #{opUserRole,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>