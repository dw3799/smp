<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alipapa.smp.consumer.mapper.UserConsumerRelationMapper">
  <resultMap id="BaseResultMap" type="com.alipapa.smp.consumer.pojo.UserConsumerRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="consumer_id" jdbcType="BIGINT" property="consumerId" />
    <result column="consumer_no" jdbcType="VARCHAR" property="consumerNo" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="has_order" jdbcType="INTEGER" property="hasOrder" />
    <result column="deal_order" jdbcType="INTEGER" property="dealOrder" />
    <result column="follow_time" jdbcType="TIMESTAMP" property="followTime" />
    <result column="next_follow_time" jdbcType="TIMESTAMP" property="nextFollowTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, consumer_id, consumer_no, user_id, user_no, is_del, has_order, deal_order, follow_time, 
    next_follow_time, created_time, updated_time
  </sql>
  <select id="selectByExample" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_consumer_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_consumer_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_consumer_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelationExample">
    delete from user_consumer_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelation">
    insert into user_consumer_relation (id, consumer_id, consumer_no, 
      user_id, user_no, is_del, 
      has_order, deal_order, follow_time, 
      next_follow_time, created_time, updated_time
      )
    values (#{id,jdbcType=BIGINT}, #{consumerId,jdbcType=BIGINT}, #{consumerNo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{userNo,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, 
      #{hasOrder,jdbcType=INTEGER}, #{dealOrder,jdbcType=INTEGER}, #{followTime,jdbcType=TIMESTAMP}, 
      #{nextFollowTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelation">
    insert into user_consumer_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="consumerNo != null">
        consumer_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="hasOrder != null">
        has_order,
      </if>
      <if test="dealOrder != null">
        deal_order,
      </if>
      <if test="followTime != null">
        follow_time,
      </if>
      <if test="nextFollowTime != null">
        next_follow_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=BIGINT},
      </if>
      <if test="consumerNo != null">
        #{consumerNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="hasOrder != null">
        #{hasOrder,jdbcType=INTEGER},
      </if>
      <if test="dealOrder != null">
        #{dealOrder,jdbcType=INTEGER},
      </if>
      <if test="followTime != null">
        #{followTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextFollowTime != null">
        #{nextFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelationExample" resultType="java.lang.Long">
    select count(*) from user_consumer_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_consumer_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.consumerId != null">
        consumer_id = #{record.consumerId,jdbcType=BIGINT},
      </if>
      <if test="record.consumerNo != null">
        consumer_no = #{record.consumerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.hasOrder != null">
        has_order = #{record.hasOrder,jdbcType=INTEGER},
      </if>
      <if test="record.dealOrder != null">
        deal_order = #{record.dealOrder,jdbcType=INTEGER},
      </if>
      <if test="record.followTime != null">
        follow_time = #{record.followTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nextFollowTime != null">
        next_follow_time = #{record.nextFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_consumer_relation
    set id = #{record.id,jdbcType=BIGINT},
      consumer_id = #{record.consumerId,jdbcType=BIGINT},
      consumer_no = #{record.consumerNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      has_order = #{record.hasOrder,jdbcType=INTEGER},
      deal_order = #{record.dealOrder,jdbcType=INTEGER},
      follow_time = #{record.followTime,jdbcType=TIMESTAMP},
      next_follow_time = #{record.nextFollowTime,jdbcType=TIMESTAMP},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelation">
    update user_consumer_relation
    <set>
      <if test="consumerId != null">
        consumer_id = #{consumerId,jdbcType=BIGINT},
      </if>
      <if test="consumerNo != null">
        consumer_no = #{consumerNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="hasOrder != null">
        has_order = #{hasOrder,jdbcType=INTEGER},
      </if>
      <if test="dealOrder != null">
        deal_order = #{dealOrder,jdbcType=INTEGER},
      </if>
      <if test="followTime != null">
        follow_time = #{followTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextFollowTime != null">
        next_follow_time = #{nextFollowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alipapa.smp.consumer.pojo.UserConsumerRelation">
    update user_consumer_relation
    set consumer_id = #{consumerId,jdbcType=BIGINT},
      consumer_no = #{consumerNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      user_no = #{userNo,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      has_order = #{hasOrder,jdbcType=INTEGER},
      deal_order = #{dealOrder,jdbcType=INTEGER},
      follow_time = #{followTime,jdbcType=TIMESTAMP},
      next_follow_time = #{nextFollowTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>