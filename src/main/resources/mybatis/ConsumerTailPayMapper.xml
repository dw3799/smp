<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alipapa.smp.order.mapper.ConsumerTailPayMapper">
  <resultMap id="BaseResultMap" type="com.alipapa.smp.order.pojo.ConsumerTailPay">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="consumer_no" jdbcType="VARCHAR" property="consumerNo" />
    <result column="consumer_name" jdbcType="VARCHAR" property="consumerName" />
    <result column="consumer_country" jdbcType="VARCHAR" property="consumerCountry" />
    <result column="receipt_channel" jdbcType="VARCHAR" property="receiptChannel" />
    <result column="receipt_no" jdbcType="VARCHAR" property="receiptNo" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="pay_no" jdbcType="VARCHAR" property="payNo" />
    <result column="tail_amount" jdbcType="BIGINT" property="tailAmount" />
    <result column="actual_tail_amount" jdbcType="BIGINT" property="actualTailAmount" />
    <result column="exchange_rate" jdbcType="VARCHAR" property="exchangeRate" />
    <result column="cn_actual_tail_amount" jdbcType="BIGINT" property="cnActualTailAmount" />
    <result column="tail_pay_time" jdbcType="TIMESTAMP" property="tailPayTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, consumer_no, consumer_name, consumer_country, receipt_channel, receipt_no, 
    pay_channel, pay_no, tail_amount, actual_tail_amount, exchange_rate, cn_actual_tail_amount, 
    tail_pay_time, remark, created_time, updated_time, pay_status
  </sql>
  <select id="selectByExample" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consumer_tail_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consumer_tail_pay
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from consumer_tail_pay
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPayExample">
    delete from consumer_tail_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPay">
    insert into consumer_tail_pay (id, order_no, consumer_no, 
      consumer_name, consumer_country, receipt_channel, 
      receipt_no, pay_channel, pay_no, 
      tail_amount, actual_tail_amount, exchange_rate, 
      cn_actual_tail_amount, tail_pay_time, remark, 
      created_time, updated_time, pay_status
      )
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{consumerNo,jdbcType=VARCHAR}, 
      #{consumerName,jdbcType=VARCHAR}, #{consumerCountry,jdbcType=VARCHAR}, #{receiptChannel,jdbcType=VARCHAR}, 
      #{receiptNo,jdbcType=VARCHAR}, #{payChannel,jdbcType=VARCHAR}, #{payNo,jdbcType=VARCHAR}, 
      #{tailAmount,jdbcType=BIGINT}, #{actualTailAmount,jdbcType=BIGINT}, #{exchangeRate,jdbcType=VARCHAR}, 
      #{cnActualTailAmount,jdbcType=BIGINT}, #{tailPayTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPay">
    insert into consumer_tail_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="consumerNo != null">
        consumer_no,
      </if>
      <if test="consumerName != null">
        consumer_name,
      </if>
      <if test="consumerCountry != null">
        consumer_country,
      </if>
      <if test="receiptChannel != null">
        receipt_channel,
      </if>
      <if test="receiptNo != null">
        receipt_no,
      </if>
      <if test="payChannel != null">
        pay_channel,
      </if>
      <if test="payNo != null">
        pay_no,
      </if>
      <if test="tailAmount != null">
        tail_amount,
      </if>
      <if test="actualTailAmount != null">
        actual_tail_amount,
      </if>
      <if test="exchangeRate != null">
        exchange_rate,
      </if>
      <if test="cnActualTailAmount != null">
        cn_actual_tail_amount,
      </if>
      <if test="tailPayTime != null">
        tail_pay_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="consumerNo != null">
        #{consumerNo,jdbcType=VARCHAR},
      </if>
      <if test="consumerName != null">
        #{consumerName,jdbcType=VARCHAR},
      </if>
      <if test="consumerCountry != null">
        #{consumerCountry,jdbcType=VARCHAR},
      </if>
      <if test="receiptChannel != null">
        #{receiptChannel,jdbcType=VARCHAR},
      </if>
      <if test="receiptNo != null">
        #{receiptNo,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null">
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="tailAmount != null">
        #{tailAmount,jdbcType=BIGINT},
      </if>
      <if test="actualTailAmount != null">
        #{actualTailAmount,jdbcType=BIGINT},
      </if>
      <if test="exchangeRate != null">
        #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="cnActualTailAmount != null">
        #{cnActualTailAmount,jdbcType=BIGINT},
      </if>
      <if test="tailPayTime != null">
        #{tailPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPayExample" resultType="java.lang.Long">
    select count(*) from consumer_tail_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consumer_tail_pay
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.consumerNo != null">
        consumer_no = #{record.consumerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.consumerName != null">
        consumer_name = #{record.consumerName,jdbcType=VARCHAR},
      </if>
      <if test="record.consumerCountry != null">
        consumer_country = #{record.consumerCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptChannel != null">
        receipt_channel = #{record.receiptChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptNo != null">
        receipt_no = #{record.receiptNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannel != null">
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.payNo != null">
        pay_no = #{record.payNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tailAmount != null">
        tail_amount = #{record.tailAmount,jdbcType=BIGINT},
      </if>
      <if test="record.actualTailAmount != null">
        actual_tail_amount = #{record.actualTailAmount,jdbcType=BIGINT},
      </if>
      <if test="record.exchangeRate != null">
        exchange_rate = #{record.exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="record.cnActualTailAmount != null">
        cn_actual_tail_amount = #{record.cnActualTailAmount,jdbcType=BIGINT},
      </if>
      <if test="record.tailPayTime != null">
        tail_pay_time = #{record.tailPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consumer_tail_pay
    set id = #{record.id,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      consumer_no = #{record.consumerNo,jdbcType=VARCHAR},
      consumer_name = #{record.consumerName,jdbcType=VARCHAR},
      consumer_country = #{record.consumerCountry,jdbcType=VARCHAR},
      receipt_channel = #{record.receiptChannel,jdbcType=VARCHAR},
      receipt_no = #{record.receiptNo,jdbcType=VARCHAR},
      pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      pay_no = #{record.payNo,jdbcType=VARCHAR},
      tail_amount = #{record.tailAmount,jdbcType=BIGINT},
      actual_tail_amount = #{record.actualTailAmount,jdbcType=BIGINT},
      exchange_rate = #{record.exchangeRate,jdbcType=VARCHAR},
      cn_actual_tail_amount = #{record.cnActualTailAmount,jdbcType=BIGINT},
      tail_pay_time = #{record.tailPayTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      pay_status = #{record.payStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPay">
    update consumer_tail_pay
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="consumerNo != null">
        consumer_no = #{consumerNo,jdbcType=VARCHAR},
      </if>
      <if test="consumerName != null">
        consumer_name = #{consumerName,jdbcType=VARCHAR},
      </if>
      <if test="consumerCountry != null">
        consumer_country = #{consumerCountry,jdbcType=VARCHAR},
      </if>
      <if test="receiptChannel != null">
        receipt_channel = #{receiptChannel,jdbcType=VARCHAR},
      </if>
      <if test="receiptNo != null">
        receipt_no = #{receiptNo,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null">
        pay_channel = #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null">
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="tailAmount != null">
        tail_amount = #{tailAmount,jdbcType=BIGINT},
      </if>
      <if test="actualTailAmount != null">
        actual_tail_amount = #{actualTailAmount,jdbcType=BIGINT},
      </if>
      <if test="exchangeRate != null">
        exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="cnActualTailAmount != null">
        cn_actual_tail_amount = #{cnActualTailAmount,jdbcType=BIGINT},
      </if>
      <if test="tailPayTime != null">
        tail_pay_time = #{tailPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alipapa.smp.order.pojo.ConsumerTailPay">
    update consumer_tail_pay
    set order_no = #{orderNo,jdbcType=VARCHAR},
      consumer_no = #{consumerNo,jdbcType=VARCHAR},
      consumer_name = #{consumerName,jdbcType=VARCHAR},
      consumer_country = #{consumerCountry,jdbcType=VARCHAR},
      receipt_channel = #{receiptChannel,jdbcType=VARCHAR},
      receipt_no = #{receiptNo,jdbcType=VARCHAR},
      pay_channel = #{payChannel,jdbcType=VARCHAR},
      pay_no = #{payNo,jdbcType=VARCHAR},
      tail_amount = #{tailAmount,jdbcType=BIGINT},
      actual_tail_amount = #{actualTailAmount,jdbcType=BIGINT},
      exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      cn_actual_tail_amount = #{cnActualTailAmount,jdbcType=BIGINT},
      tail_pay_time = #{tailPayTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      pay_status = #{payStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>